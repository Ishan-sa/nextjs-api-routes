import Head from "next/head";
import axios from "axios";
import { useState, useEffect } from "react";
import { AiFillDelete, AiFillEdit } from "react-icons/ai";
import Messages from "components/Messages/Messages";

export default function Test() {
  const [channels, setChannels] = useState([]);
  const [editMode, setEditMode] = useState(false);
  const [updatedData, setUpdatedData] = useState({});
  const [selectedChannelId, setSelectedChannelId] = useState(null);
  const [currentChannelName, setCurrentChannelName] = useState("");

  const handleEdit = (id) => {
    setSelectedChannelId(id);
    setCurrentChannelName(channels.find((channel) => channel.id === id).name);
  };

  useEffect(() => {
    const fetchChannels = async () => {
      const { data } = await axios.get("/api/channels");
      setChannels(data);
    };
    fetchChannels();
  });

  const deleteChannel = async (id) => {
    try {
      await axios.delete(`/api/channels/${id}`);
      setChannels(channels.filter((channel) => channel.id !== id));
    } catch (error) {
      console.log(error.message);
    }
  };

  const updateChannel = async (id, updatedData) => {
    if (Object.keys(updatedData).length > 0) {
      await axios.put(`/api/channels/${id}`, updatedData);
      setChannels(
        channels.map((channel) =>
          channel.id === id ? { ...channel, ...updatedData } : channel
        )
      );
      setUpdatedData({});
    } else {
      setEditMode(false);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex">
        <main className="main-cont">
          {channels.map((channel) => (
            <div
              key={channel.id}
              className="flex flex-row px-2 py-4 rounded-lg gap-8"
            >
              <h1 className="text-md text-[#f5f5f5]"># {channel.name}</h1>
              {/* <h3 className="text-gray-700">{channel.created}</h3> */}
              {editMode && selectedChannelId === channel.id ? (
                <form
                  onSubmit={(e) => {
                    e.preventDefault();
                    updateChannel(channel.id, updatedData);
                    setEditMode(false);
                  }}
                >
                  <input
                    type="text"
                    placeholder="Channel Name"
                    className="border-2 border-gray-300 rounded-lg px-2 py-1"
                    // value={updatedData.name || ""}
                    // value={currentChannelName}
                    defaultValue={currentChannelName}
                    onChange={(e) => {
                      setCurrentChannelName(e.target.value);
                      setUpdatedData({ ...updatedData, name: e.target.value });
                    }}
                  />
                  <div>
                    <button
                      type="submit"
                      className="bg-green-400 text-white px-2 py-1 rounded-lg mt-4 mr-2"
                    >
                      Save
                    </button>
                    <button
                      onClick={() => {
                        setEditMode(false);
                      }}
                      className="bg-red-400 text-white px-2 py-1 rounded-lg mt-4"
                    >
                      Cancel
                    </button>
                  </div>
                </form>
              ) : (
                <>
                  <div className="flex items-center gap-2">
                    <AiFillDelete
                      onClick={() => deleteChannel(channel.id)}
                      className="text-red-400 text-2xl cursor-pointer"
                    />
                    <AiFillEdit
                      onClick={() => {
                        handleEdit(channel.id);
                        setEditMode(true);
                      }}
                      className="text-blue-400 text-2xl cursor-pointer"
                    />
                  </div>
                </>
              )}
            </div>
          ))}
        </main>
        <Messages />
      </div>
    </>
  );
}
